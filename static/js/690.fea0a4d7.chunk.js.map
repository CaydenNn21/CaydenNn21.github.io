{"version":3,"file":"static/js/690.fea0a4d7.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","pages/Contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n/* eslint import/no-extraneous-dependencies: off */\r\nimport emailjs from '@emailjs/browser';\r\nimport Main from '../layouts/Main';\r\nimport ContactIcons from '../components/Contact/ContactIcons';\r\n\r\nconst Contact = () => {\r\n  const form = React.useRef();\r\n  const mystyle = { listStyleType: 'none' };\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm('service_od0o0pg', 'template_pm89f8q', e.target, 'TmPdnUpRCau1oDY40')\r\n      .then(\r\n        () => {\r\n          // eslint-disable-next-line\r\n          alert('Message successfully sent!');\r\n          window.location.reload(false);\r\n        },\r\n        () => {\r\n          // eslint-disable-next-line\r\n          alert('Failed to send the message, please try again');\r\n        },\r\n      );\r\n\r\n    e.target.reset(); // Clear the form after submission\r\n  };\r\n\r\n  return (\r\n    <Main\r\n      title=\"Contact\"\r\n      description=\"Contact Kean Seng Phang via email @ keansengphang01@gmail.com\"\r\n    >\r\n      <article className=\"post\" id=\"contact\">\r\n        <header>\r\n          <div className=\"title\">\r\n            <h2><Link to=\"/contact\">Contact</Link></h2>\r\n          </div>\r\n        </header>\r\n        <div className=\"email-at\">\r\n          <p>Feel free to get in touch.</p>\r\n          <p>You can email me at: keansengphang01@gmail.com</p>\r\n        </div>\r\n        <div className=\"contact-form\">\r\n          <form ref={form} onSubmit={sendEmail}>\r\n            <ul style={mystyle}>\r\n              <li className=\"half\">\r\n                <input placeholder=\"Name\" type=\"text\" name=\"name\" required />\r\n              </li>\r\n              <li className=\"half\">\r\n                <input placeholder=\"Email\" type=\"email\" name=\"email\" required />\r\n              </li>\r\n              <li>\r\n                <input placeholder=\"Subject\" type=\"text\" name=\"subject\" required />\r\n              </li>\r\n              <li>\r\n                <textarea placeholder=\"Message\" type=\"text\" name=\"message\" required />\r\n              </li>\r\n              <li>\r\n                <input type=\"submit\" className=\"flat-button\" value=\"SEND\" />\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n        <ContactIcons />\r\n      </article>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","React","_jsx","Main","title","description","children","_jsxs","className","id","Link","to","ref","onSubmit","e","preventDefault","emailjs","then","alert","window","location","reload","reset","style","listStyleType","placeholder","type","name","required","value","ContactIcons"],"sourceRoot":""}